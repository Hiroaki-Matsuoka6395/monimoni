version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: monimoni_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./api/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - monimoni_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: monimoni_api
    environment:
      - DATABASE_URL=mysql+aiomysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}
      - APP_SECRET=${APP_SECRET}
      - HOUSEHOLD_PIN=${HOUSEHOLD_PIN}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - MAX_UPLOAD_MB=${MAX_UPLOAD_MB}
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    ports:
      - "8000:8000"
    volumes:
      - receipt_files:${UPLOAD_DIR}
      - ./api:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monimoni_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      target: development
    container_name: monimoni_web
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
      - /app/node_modules
    networks:
      - monimoni_network
    environment:
      - VITE_API_BASE_URL=/api

  nginx:
    image: nginx:alpine
    container_name: monimoni_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
      - web
    networks:
      - monimoni_network

  backup:
    image: alpine:latest
    container_name: monimoni_backup
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TZ}
    volumes:
      - db_backups:/db_backups
      - ./backup/backup.sh:/backup.sh:ro
    depends_on:
      - db
    networks:
      - monimoni_network
    command: sh -c "apk add --no-cache mysql-client dcron && chmod +x /backup.sh && echo '0 3 * * * /backup.sh' | crontab - && crond -f"

volumes:
  db_data:
  receipt_files:
  db_backups:

networks:
  monimoni_network:
    driver: bridge
